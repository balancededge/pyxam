# Compile this document to a pdf and produce solutions using the command:
#   $ pyxam -s -f pdf pyxam_tex_standard.org
# Compile this document to moodle using the command:
#   $ pyxam -f moodle pyxam_tex_standard.org
# Compile this document to html and produce solutions using the command:
#   $ pyxam -s -f html pyxam_tex_standard.org
# Set the title of the output document to pyxam_standard
<%
pyxam.args('-t pyxam_standard')
%>
* ?::
<% pyxam.categorize(course='testing', category='standard') %>
** ?:: 1. Essay Question
This is the simplest question possible. It is just a prompt and has no solution.
** ?:: 2. Short Answer
Short answer questions are composed of a prompt and solution. When importing the question to Moodle the solution will be
matched character for character.
*** solution
Place your solution in a solution block.
** ?:: 3. Multiple Choice
Multiple choice questions are made up of choices and correct choices. You can have as many of each as you need. All
choices should appear in a choices block. By default multiple choice questions will be shuffled when imported to Moodle.
*** choices
- [ ] Text for choice A
- [ ] Text for choice B
- [ ] Text for choice C
- [X] Text for correct choice D
** ?:: 4. Shuffled Multiple Choice
Although multiple choice questions are automatically shuffled when added to Moodle they are not automatically shuffled
when exporting to other formats such as pdf. To do this use the pyxam.shuffle function on your choices.
*** choices
<%= pyxam.shuffle(
    '- [ ] Text for choice A',
    '- [ ] Text for choice B',
    '- [ ] Text for choice C',
    '- [X] Text for choice D'
)%>
** ?:: 5. Multi Select
Multi select questions are a slight variation on multiple choice questions. By including multiple correct choices the
Moodle format will automatically allow the user to select multiple answers.
*** choices
- [ ] Text for choice A
- [X] Text for correct choice B
- [ ] Text for choice C
- [X] Text for correct choice D
** ?:: 6. True or False
True or False questions are a variation of multiple choice questions where the only choices are True or False. Is 
$\sqrt{2}=7$?
*** choices
- [ ] True
- [X] False
** ?:: 7. Numerical Question
Numerical questions look like short answer questions except that in the solution block they call the pyxam.numerical
function. By passing in a numerical solution the question will be set to the numerical type in moodle. What is $\sqrt{16}$?
*** solution
<% pyxam.numerical(4) %>
** ?:: 8. Numerical Question With Absolute Tolerance
The pyxam.numerical function also supports a tolerance argument which allows for answers from plus or minus tolerance of
the answer. What is $\sqrt{16}$ (a numerical tolerance of $\pm 0.1$ will be allowed)?
*** solution
<% pyxam.numerical(4, tolerance=0.1) %>
** ?:: 9. Numerical Question With Percent Tolerance
Tolerance for numerical questions can also pe specified in percent by setting the percent flag. What is $\sqrt{16}$ 
(a numerical tolerance of $\pm 1\%$ will be allowed)?
*** solution
<% pyxam.numerical(4, tolerance=1, percent=True) %>
** ?:: 10. Using a Plot in a Question
Plots can be added to any question by settign the fig flag in the noweb format.
<<echo=False, fig=True>>=
import matplotlib.pyplot
# To add a dataset we use the pyplot module in matplotlib and provide a dataset to the plot function
matplotlib.pyplot.plot([1,2,3,4])
# The axis of the plot can be labeled using the ylabel and xlabel functions
matplotlib.pyplot.ylabel('Y axis')
matplotlib.pyplot.xlabel('X axis')
# A title can be added using the title function
matplotlib.pyplot.title('A Simple Graph')
# Use the show function to finalize the figure and display it in the question
matplotlib.pyplot.show()
@
** ?:: 11. Random Numbers
You can constructor a wildcard using pyxam.wildcard. Wildcards take a name and min max values. They will automatically
generate random numbers for you. Wildcards support most basic arithmetic meaning they can be added together, multiply by
eachother, etc. Operations between wildcards will produce another wildcard. This is important for the calculated
question type. In order to include the values of wildcards in the question simply write them in a code snippet.
<%
# Set our parameters
a = pyxam.wildcard(min=0, max=10)
b = pyxam.wildcard(min=0, max=10)
%>
Now that we've set up the question we can ask what is <%= a %> + <%= b %>?
*** solution
<% pyxam.numerical(a + b) %>
** ?:: 12. Plotting Random Numbers
Plots can use wildcards as their plotted data.
<<echo=False, fig=True>>=
import matplotlib.pyplot
# To add a dataset we use the pyplot module in matplotlib and provide a dataset to the plot function
a = pyxam.wildcard(set=[1, 2, 3, 4])
b = pyxam.wildcard(set=[5, 6, 7, 8])
c = pyxam.wildcard(set=[9, 0, 1, 2])
d = pyxam.wildcard(set=[3, 4, 5, 6])
matplotlib.pyplot.plot([a, b, c, d])
# The axis of the plot can be labeled using the ylabel and xlabel functions
matplotlib.pyplot.ylabel('Y axis')
matplotlib.pyplot.xlabel('X axis')
# A title can be added using the title function
matplotlib.pyplot.title('A Simple Graph')
# Use the show function to finalize the figure and display it in the question
matplotlib.pyplot.show()
@
** ?:: 13. Picking Parameters From a List
Wildcards can also be used to pick parameters from a list. Which parameter is picked will depend on the exam number,
ie. version 1 of the exam will pick the first parameter, version 2 will pick the second, and so on. To create this type
of wildcard simply specify the set argument.
<%
# Define the lists for our parameters
a = pyxam.wildcard(set=[1, 2, 3, 4])
b = pyxam.wildcard(set=[1, 2, 3, 4])
%>
What is <%= a %> + <%= b %>?
*** solution
<% pyxam.numerical(a + b) %>
** ?:: 14. Calculated Question
Calculated questions can be used to create questions that randomly change when accessed on Moodle. When outputting to a
format other than moodle these questions act just like numerical questions. You can use the n argument to the wildcard
to set how many moodle values will be generated and the decimals argument to specify how many decimal points should be
in the parameters.
<%
a = pyxam.wildcard(min=0, max=10, n=3, decimals=1)
b = pyxam.wildcard(set=[2.5, 4.0, 9.8])
%>
To reference variables within your prompt you have to put the wildcards in curly brackets. So here we would ask what is
<%= {a} %> + <%= {b} %>. Next call the pyxam.calculated function in the solution block. The first argument of the
function must be the moodle equation used to calculate solutions. The tolerance and percent arguments fron numerical can
also be used here. Finally call the pyxam.dataset function outside in the dataset block and pass in your wildcards.
*** solution
<% pyxam.calculated('{a} + {b}', tolerance=0.1) %>
*** dataset
<% pyxam.dataset(a, b) %>
** ?:: 15. Calculated Question Picked From List
Just like with numerical questions you can also use the pick from a list with calculated questions and
have the solution picked rather than calculated.
<%
a = pyxam.wildcard(set=[1, 2, 3, 4])
%>
For example what is <%= {a} %>?
*** solution
<% pyxam.calculated('{a}') %>
*** dataset
<% pyxam.dataset(a) %>
** ?:: 16. Constants
Constants can be referened by the following variables.
<%= pyxam.number %> will be replaced with the exam number.
<%= pyxam.version %> will be replaced with the exam version.
<%= pyxam.student_first_name %> will be replaced with the student's first name if available
<%= pyxam.student_last_name %> will be replaced with the student's last name if available
<%= pyxam.student_name %> will be replaced with the student's full name if available.
<%= pyxam.student_number %> will be replaced with the student number if available.
** ?:: 17 Images
Images can be included in org mode using the following syntax:
\includegraphics[width= \linewidth]{test.png}
